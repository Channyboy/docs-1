{"version":3,"sources":["js/04-configs.js"],"names":["subSectionClass","subHeadingClass","maxIndentLevel","minIndentLevel","contentBreadcrumbHeight","mobileWidth","ipadWidth","addTOCClick","$","off","on","event","remove","resource","currentTarget","setSelectedTOC","currentHref","attr","isMobileView","isIPadView","removeClass","hide","indexOf","updateTitle","text","handleContentBreadcrumbVisibility","updateHashInUrl","createClickableBreadcrumb","getContentBreadcrumbTitle","stopPropagation","which","keyCode","this","trigger","scrollTo","currentTOCSelected","newHref","length","href","find","substring","removeHashRefTOC","hasClass","parent","addClass","hashHref","each","currentPage","scrollToPos","pos","handleExpandCollapseState","titleId","isExpand","hrefElement","is","titleSplits","split","parentTitleId","i","parentToggleButton","handleExpandCollapseToggleButton","toggleButton","hashInUrl","state","undefined","expand","window","history","pushState","handleSubHeadingsInContent","contentTitle","anchors","deferAddingExpandAndCollapseToggleButton","addAnchorToSubHeadings","get","reverse","subHeading","anchorTitle","modifySubHeading","table","getTableForSubHeading","anchorTitleId","indentLevels","calcIndentAndAddClass","addExpandAndCollapseToggleButtons","push","heading","handleDeferredExpandCollapseElements","subHeadings","id","replace","anchorElement","prepend","getTitle","title","retTitle","openParamIndex","closeParamIndex","trim","subHeadingElement","strong","lastIndex","lastIndexOf","titleStrong","titlePlain","append","next","dataId","levels","marginLeft","setDataId","css","parseInt","element","getDataId","handleExpandCollapseTitle","buttonElement","updateUrl","collapsed","empty","getSelectedDocHtml","isShow","content","matchingElements","hideElements","elements","nestedDataId","show","deferredElements","modifyFixedTableColumnWidth","colgroups","colWidths","cols","currentColWidths","index","findTOCElement","processHash","matchingTOCElement","configIndex","location","slashIndex","hashIndex","hash","handleSubHeadingsInTOC","TOCElement","anchorLI","depth","data","anchorHref","ul","anchorTitleText","anchorTitleTextIndex","tocLI","handleContentScrolling","article","lastViewPos","document","scrollDown","currentScrollTop","scrollTop","breadcrumbVisible","initialContentInView","isInitialContentInView","closestAnchor","isInViewport","inView","currentViewPos","inViewPort","firstSubheadingElement","first","lastInitialContentElementRect","prev","getBoundingClientRect","breadcrumbHeight","outerHeight","top","height","elementTop","headerHeight","contentTop","contentBottom","viewportHeight","documentElement","clientHeight","breadcrumbText","highlightLastItem","breadcrumbTextSplits","stickyHeaderBreadcrumb","paddingWidth","breadcrumbWidth","width","contentWindowWidth","fontSize","addContentBreadcrumbClick","preventDefault","anchor","offset","animate","handleParentWindowScrolling","e","addConfigContentFocusListener","mousedown","handleInitialContent","url","configName","handlePopstate","onpopstate","popstateHrefPathname","pathname","TOCSubElement","initialContentBreadcrumbVisibility","hashPos","slideDown","slideUp","replaceHistoryState","hashToReplace","fullHref","replaceState","addOverviewPageClickAndScroll","ready"],"mappings":"AAWA,IAAIA,gBAAkB,aAClBC,gBAAkB,aAClBC,eAAiB,EACjBC,eAAiB,EACjBC,wBAA0B,EAC1BC,YAAc,IACdC,UAAY,KAEhB,SAASC,cA4BLC,EAAE,oCAAoCC,IAAI,SAASC,GAAG,QA3BxC,SAAUC,GAEpBH,EAAE,oDAAoDI,SACtD,IAAIC,EAAWL,EAAEG,EAAMG,eACvBC,eAAeF,GAAU,GACzB,IAAIG,EAAcH,EAASI,KAAK,SAE5BC,gBAAkBC,gBAClBX,EAAE,kCAAkCY,YAAY,aAChDZ,EAAE,UAAUa,SAGkB,IAA9BL,EAAYM,QAAQ,KAIpBC,YAAYV,EAASW,QAKrBC,mCAAkC,GAEtCC,gBAAgBV,GAChBW,0BAA0BC,6BAA6B,KAK3DpB,EAAE,oCAAoCC,IAAI,YAAYC,GAAG,WAAY,SAAUC,GAC3EA,EAAMkB,kBAEc,KAAhBlB,EAAMmB,OAAkC,KAAlBnB,EAAMoB,SAAkC,KAAhBpB,EAAMmB,OAAkC,KAAlBnB,EAAMoB,SAC1EvB,EAAEwB,MAAMC,QAAQ,WAM5B,SAASlB,eAAeF,EAAUqB,GAC9B,IAAIC,EAAqB3B,EAAE,+CACvB4B,EAAUvB,EAASI,KAAK,QAE5B,GAAGmB,EAAQ,CACP,GAAkC,IAA9BD,EAAmBE,OAAc,CACjC,IAAIC,EAAOH,EAAmBI,KAAK,KAAKtB,KAAK,SAClB,IAAvBqB,EAAKhB,QAAQ,OACbgB,EAAOA,EAAKE,UAAU,EAAGF,EAAKhB,QAAQ,QAGX,IAA3Bc,EAAQd,QAAQgB,IAChBG,iBAAiBH,GAErBH,EAAmBf,YAAY,mBAC3Be,EAAmBO,SAAS,qBAC5BP,EAAmBf,YAAY,qBACxBe,EAAmBO,SAAS,qBACnCP,EAAmBf,YAAY,oBAGvCZ,EAAE,oBAAoBY,YAAY,mBAClCP,EAAS8B,SAASC,SAAS,oBACG,IAA1BR,EAAQd,QAAQ,KAChBT,EAAS8B,SAASC,SAAS,qBAE3B/B,EAAS8B,SAASC,SAAS,qBAMvC,SAASH,iBAAiBH,GACtB,IAAIO,EAAWrC,EAAE,kCAAkC+B,KAAK,YAAcD,EAAO,OAC7E9B,EAAEqC,GAAUC,KAAK,WACbtC,EAAEwB,MAAMW,SAAS/B,WAKzB,SAASW,YAAYwB,GACjBvC,EAAE,SAASgB,KAAKuB,EAAc,mCASlC,SAASC,YAAYC,IAgBrB,SAASC,0BAA0BC,EAASC,GACxC,IAAIC,EAAc7C,EAAE,eAAe+B,KAAK,SAAWY,EAAU,MAC7D,GAA2B,IAAvBE,EAAYhB,OAAc,CAC1B,IAAKgB,EAAYC,GAAG,YAIhB,IAFA,IAAIC,EAAcJ,EAAQK,MAAM,KAC5BC,EAAgBF,EAAY,GACvBG,EAAI,EAAGA,EAAIH,EAAYlB,OAAS,EAAGqB,IAAK,CAC7CD,GAAiB,IAAMF,EAAYG,GACnC,IAAIC,EAAqBnD,EAAE,eAAe+B,KAAK,SAAWkB,EAAgB,MAAMd,SAASJ,KAAK,WACjD,SAAzCoB,EAAmB1C,KAAK,cACxB2C,iCAAiCD,GAAoB,GAIjE,IAAIE,EAAerD,EAAE,eAAe+B,KAAK,SAAWY,EAAU,MAAMR,SAASJ,KAAK,aAChE,IAAba,GAAyD,SAAnCS,EAAa5C,KAAK,eAC3B,IAAbmC,GAA0D,UAAnCS,EAAa5C,KAAK,eAC1C2C,iCAAiCC,GAAc,IAU3D,SAASnC,gBAAgBY,EAAMc,GAC3B,IAAIU,EAAYxB,GACkB,IAA9BA,EAAKhB,QAAQ,cACbwC,EAAYxB,EAAKE,UAAU,KAG/B,IAAIuB,EAAQ,KACC,KAATzB,IACAyB,EAAQ,CAAEzB,KAAMA,SAEH0B,IAAbZ,IACIA,GACAU,GAAa,eACbC,EAAME,QAAS,IAEfH,GAAa,gBACbC,EAAME,QAAS,IAGvBC,OAAOC,QAAQC,UAAUL,EAAO,KAAM,IAAMD,GAIhD,SAASO,6BACL,IAAIC,EAAe1C,4BACf2C,EAAU/D,EAAE,qCACZgE,EAA2C,GAExB,IAAnBD,EAAQlC,SACRoC,yBACAF,EAAU/D,EAAE,sCAIhBA,EAAEA,EAAE+D,GAASG,MAAMC,WAAW7B,KAAK,WAC/B,IAAI8B,EAAapE,EAAEwB,MAAMW,SACrBkC,EAAcC,iBAAiBF,EAAYN,GAC3CS,EAAQC,sBAAsBJ,GAC9BK,EAAgBzE,EAAEwB,MAAMf,KAAK,MAC7BiE,EAAeC,sBAAsBP,EAAYC,EAAaE,EAAOE,GAErD9E,gBAAhB+E,IACIH,EACAK,kCAAkCR,EAAYK,GAE9CT,EAAyCa,KAAK,CAAEC,QAASV,EAAYK,cAAeA,OAKhGM,qCAAqCf,GAGzC,SAASC,yBACL,IAAIe,EAAchF,EAAE,4CACpBA,EAAEA,EAAEgF,IAAc1C,KAAK,WACnB,IAAIH,EAASnC,EAAEwB,MAAMW,SACjB8C,EAAK9C,EAAOnB,OAAOkE,QAAQ,OAAQ,KACnCC,EAAgBnF,EAAE,UAAYiF,EAAK,UACvC9C,EAAOiD,QAAQD,KAKvB,SAAS/D,4BAGL,OADkBiE,SADNrF,EAAE,uBAAuBgB,QAKzC,SAASqE,SAASC,GACd,IAAIC,EAAWD,EACXE,EAAiBF,EAAMxE,QAAQ,KAC/B2E,EAAkBH,EAAMxE,QAAQ,KAIpC,OAHwB,IAApB0E,GAA4C,GAApBC,IACxBF,EAAWD,EAAMtD,UAAUwD,EAAiB,EAAGC,IAE5CF,EAASG,OAIpB,SAASpB,iBAAiBqB,EAAmB7B,GACzC,IACIO,EADAuB,EAASD,EAAkB5D,KAAK,UAOpC,QAAoByB,KAJhBa,EADgB,EAAhBuB,EAAO/D,OACO+D,EAAO5E,OAEP2E,EAAkB3E,QAEL,CAC3B,IAAIsE,EAAQxB,EAAe,MAAQO,EAC/BwB,EAAYP,EAAMQ,YAAY,KAClC,IAAmB,IAAfD,EAAkB,CAClB,IAAIE,EAAcT,EAAMtD,UAAU,EAAG6D,EAAY,GAC7CG,EAAaV,EAAMtD,UAAU6D,EAAY,GAC7CD,EAAOxF,SACPuF,EAAkBM,OAAO,WAAaF,EAAc,YAAcC,GAItE,IAA4B,IAAxBV,EAAMxE,QAAQ,KAAa,CAC3B,IAAI6B,EAAU2C,EAAMJ,QAAQ,OAAQ,KACpCS,EAAkB5D,KAAK,KAAKtB,KAAK,KAAMkC,IAG/C,OAAO2C,EAIX,SAASd,sBAAsBmB,GAE3B,IADA,IAAIO,EAAOP,EAAkBxD,SAAS+D,OACd,IAAhBA,EAAKrE,SAAkBqE,EAAKpD,GAAG,UAA2C,IAA9BoD,EAAKnE,KAAK,SAASF,QACnEqE,EAAOA,EAAKA,OAEhB,OAAIA,EAAKpD,GAAG,SACDoD,OAEP,EAKR,SAASvB,sBAAsBgB,EAAmBL,EAAOf,EAAO4B,GAC5D,IAAIC,EAOIC,EANR,GAAIf,IAEAc,EADad,EAAMtC,MAAM,KACTnB,OACHnC,eAAT0G,IACAA,EAAS1G,gBAGAC,eAATyG,IACAC,EAAyC,IAA3BD,EAASzG,gBAAuB,IAGlDgG,EAAkBvD,SAAS3C,iBACbE,gBAAVyG,GAA0B,CAC1BT,EAAkBvD,SAAS5C,iBAC3B8G,UAAUX,EAAmBQ,QACV3C,IAAf6C,GACAV,EAAkBY,IAAI,cAAeF,EAAa,MAItD,IADA,IAAIH,EAAOP,EAAkBxD,SAAS+D,OACd,IAAhBA,EAAKrE,SAAkBqE,EAAKpD,GAAG,UAA2C,IAA9BoD,EAAKnE,KAAK,SAASF,QACnEqE,EAAK9D,SAAS5C,iBACd8G,UAAUJ,EAAMC,QACG3C,IAAf6C,GACAH,EAAKK,IAAI,cAAeF,EAAa,MAEzCH,EAAOA,EAAKA,OAEhB,GAAI3B,EAAO,CACPA,EAAMnC,SAAS5C,iBACf8G,UAAU/B,EAAO4B,GACLK,SAASjC,EAAMgC,IAAI,SAASrB,QAAQ,KAAM,KACtD,QAAmB1B,IAAf6C,EAA0B,CAC1B9B,EAAMgC,IAAI,cAAeF,EAAa,GAAK,MAE3C9B,EAAMgC,IAAI,QAAS,sBAAwBF,EAAa,mBAExD9B,EAAMgC,IAAI,QAAS,6BAKnC,OAAOH,EAGX,SAASE,UAAUG,EAASN,GACxBM,EAAQhG,KAAK,UAAW0F,GAG5B,SAASO,UAAUD,GACf,OAAOA,EAAQhG,KAAK,WAGxB,SAASmE,kCAAkCR,EAAYzB,GACnD,IAAIU,EAAerD,EAAE,iIACrB2G,0BAA0BhE,GAAS,GACnCU,EAAanD,GAAG,QAAS,WACrBkD,iCAAiCpD,EAAEwB,OAAO,KAE9C6B,EAAanD,GAAG,WAAY,SAAUC,GAClCA,EAAMkB,kBAEc,KAAhBlB,EAAMmB,OAAkC,KAAlBnB,EAAMoB,SAAkC,KAAhBpB,EAAMmB,OAAkC,KAAlBnB,EAAMoB,SAC1E8B,EAAa5B,QAAQ,WAM7B4B,EAAanD,GAAG,YAAa,YACb,IAEhBmD,EAAanD,GAAG,QAAS,YACT,IAGhBkE,EAAWgB,QAAQ/B,GAGvB,SAASD,iCAAiCwD,EAAeC,GACrD,IAAIC,EAAYF,EAAcnG,KAAK,aAC/BkC,EAAU+D,UAAUE,EAAczE,UACpB,SAAd2E,GAEAF,EAAcG,QAAQd,OAAOjG,EAAE,gFAC/B4G,EAAcnG,KAAK,aAAa,GAEhCkG,0BAA0BhE,GAAS,KAGnCgE,0BAA0BhE,GAAS,GACnCiE,EAAcG,QAAQd,OAAOjG,EAAE,2EAC/B4G,EAAcnG,KAAK,aAAa,IAEhCoG,GAEA3F,gBADW8F,qBAAuB,IACXrE,GAAS,GAIxC,SAASgE,0BAA0BhE,EAASsE,GACxC,IAAIC,EAAUlH,EAAE,eACZmH,EAAmBD,EAAQnF,KAAK,cAAgBY,EAAU,MAC1DyE,EAAe,GACnBpH,EAAEmH,GAAkB7E,KAAK,WACrB,IAAI6D,EAASO,UAAU1G,EAAEwB,OACzB,GAAIyF,EAAQ,CAER,IAAI5D,EAAerD,EAAEwB,MAAMO,KAAK,WAChC,GAA4B,IAAxBsB,EAAaxB,QAC0B,SAAnCwB,EAAa5C,KAAK,aAAyB,CAC3C,IAAI4G,EAAWH,EAAQnF,KAAK,cAAgBoE,EAAS,MACrDnG,EAAEqH,GAAU/E,KAAK,WACb,IAAIgF,EAAeZ,UAAU1G,EAAEwB,QAC1B8F,IAAiBnB,GAAUnG,EAAEwB,MAAMsB,GAAG,UAEtCwE,IAAiBnB,GAAkD,IAAvCmB,EAAaxG,QAAQqF,EAAS,OAC3DiB,EAAavC,KAAK7E,EAAEwB,SAMhC2E,IAAWxD,GAAW3C,EAAEwB,MAAMsB,GAAG,QAAU9C,EAAEwB,MAAMU,SAAS,mBAC5DlC,EAAEwB,MAAMZ,YAAY,kBAExBZ,EAAEwB,MAAM+F,YAGHpB,IAAWxD,GAAW3C,EAAEwB,MAAMsB,GAAG,UAAcqD,IAAWxD,GAA8C,IAAlCwD,EAAOrF,QAAQ6B,EAAU,KAChG3C,EAAEwB,MAAMX,OACDsF,IAAWxD,GAAW3C,EAAEwB,MAAMsB,GAAG,QACxC9C,EAAEwB,MAAMY,SAAS,oBAI7BpC,EAAEoH,GAAc9E,KAAK,WACjBtC,EAAEwB,MAAMX,SAEPH,gBACDwG,EAAQzF,QAAQ,UAIxB,SAASsD,qCAAqCyC,GAC1CxH,EAAEwH,GAAkBlF,KAAK,WACrB,IAAI8B,EAAapE,EAAEwB,MAAMf,KAAK,WAC1BkC,EAAU3C,EAAEwB,MAAMf,KAAK,iBACvB0G,EAAmBnH,EAAE,eAAe+B,KAAK,cAAgBY,EAAU,MACvE3C,EAAEmH,GAAkB7E,KAAK,WACrB,IAAI6D,EAASO,UAAU1G,EAAEwB,OACzB,GAAI2E,IAAWxD,GAA8C,IAAlCwD,EAAOrF,QAAQ6B,EAAU,KAEhD,OADAiC,kCAAkCR,EAAYzB,IACvC,MAOvB,SAAS8E,8BACL,IACIC,EADU1H,EAAE,eACQ+B,KAAK,YACzB4F,EAAY,GACXjH,iBACDiH,EAAU,GAAK,CAAC,MAAO,MAAO,MAAO,QAIzC3H,EAAE0H,GAAWpF,KAAK,WACd,GAAI5B,eACAV,EAAEwB,MAAMpB,aACL,CACH,IAAIwH,EAAO5H,EAAEwB,MAAMO,KAAK,OACpB8F,EAAmBF,EAAUC,EAAK/F,QAClCgG,GACA7H,EAAE4H,GAAMtF,KAAK,SAAUwF,GACnB9H,EAAEwB,MAAM+E,IAAI,QAASsB,EAAiBC,SAU1D,SAASC,eAAeC,GAEpB,IAUIC,EAVAC,EAAcC,SAASrG,KAAKhB,QAAQ,YACpCgB,EAAOqG,SAASrG,KAAKE,UAAUkG,EAAc,GAC7CE,EAAatG,EAAKhB,QAAQ,KAE1BuH,GADJvG,EAAOA,EAAKE,UAAUoG,EAAa,IACdtH,QAAQ,KAC7B,IAAkB,IAAfuH,EAAiB,CAChB,IAAIC,EAAOxG,EAAKE,UAAUqG,GAC1BvG,EAAOA,EAAKE,UAAU,EAAGqG,GAe7B,OAXKL,OAGYxE,IAAT8E,GAA+B,KAATA,IACtBxG,GAAcwG,EAEoB,KADlCL,EAAqBjI,EAAE,0CAA4C8B,EAAO,OACnDD,SACnBoG,OAAqBzE,IAN7ByE,EAAqBjI,EAAE,0CAA4C8B,EAAO,MAUvEmG,EAIX,SAASM,uBAAuBC,GAE5BvG,iBADW+E,sBAGX,IAAIjD,EAAU/D,EAAE,uCACZyI,EAAWD,EAAWrG,SACtBuG,EAAQD,EAASE,KAAK,SAAW,EACjCC,EAAaJ,EAAW/H,KAAK,QAC7BoI,EAAK7I,EAAE,8BACXyI,EAASxC,OAAO4C,GAChB7I,EAAE+D,GAASzB,KAAK,WACZ,IAAI8B,EAAapE,EAAEwB,MAAMW,SACzB,IAA0C,IAAtCiC,EAAWlC,SAAS,cAAyB,CAC7C,IAAIuC,EAAgBzE,EAAEwB,MAAMf,KAAK,MAC7BqI,EAAkB1E,EAAWpD,OAC7B+H,EAAuBD,EAAgBhD,YAAY,QACzB,IAA1BiD,IACAD,EAAkBA,EAAgB9G,UAAU+G,EAAuB,IAEvE,IAAIC,EAAQhJ,EAAE,oCAAsC0I,EAAQ,cAAgBE,EAAa,IAAMnE,EAAgB,KAAOqE,EAAkB,aACxID,EAAG5C,OAAO+C,MAGlBjJ,cAGJ,SAASiH,qBACL,IAAIrF,EAAqB3B,EAAE,wBACvB8B,EAAO,GAOX,OANkC,IAA9BH,EAAmBE,SAEQ,KAD3BC,EAAOH,EAAmBlB,KAAK,SACtBK,QAAQ,OACbgB,EAAOA,EAAKE,UAAU,EAAGF,EAAKhB,QAAQ,OAGvCgB,EAGX,SAASmH,yBACL,IAAKvI,eAAgB,CACjB,IAAIwI,EAAUlJ,EAAE,eACZmJ,GAAe,MAuDnBnJ,EAAE0D,OAAOvB,OAAOiH,UAAUnJ,IAAI,UAAUC,GAAG,SArDrB,WAElB,IAAImJ,GAAa,EACbC,EAAmBtJ,EAAEwB,MAAM+H,YAC3BJ,EAAcG,IACdD,GAAa,GAGjBF,EAAcG,EACd,IAAIE,EAAoBxJ,EAAE,kCAAkC8C,GAAG,YAE/D,GAAmC,iCAAhCoG,EAAQnH,KAAK,SAASf,OAAzB,CAOA,IAAIyI,EAAuBC,uBAAuBP,GAgBlD,GAfIK,IAAsBH,EAGlBI,GAEAxI,kCADAuI,GAAoB,IAGhBA,GAAqBH,IAGxBI,GAEDxI,kCADAuI,GAAoB,IAIxBA,EAAmB,CAEnB,IAAIzF,EAAUmF,EAAQnH,KAAK,yBACvB4H,EAAgB,GAOpB,GANA3J,EAAE+D,GAASzB,KAAK,WACZ,GAAItC,EAAEwB,MAAMW,SAASW,GAAG,aAAe8G,aAAa5J,EAAEwB,MAAOmI,GACzD,OAAO,IAIXA,EAAclD,UAAYkD,EAAcE,OAExC1I,0BADYwI,EAAclD,QAAQtE,SAASnB,QACV,QAEjCG,0BAA0BC,6BAA6B,QAS3E,SAASsI,uBAAuBI,GAC5B,IAAIC,GAAa,EAIbC,EAHUhK,EAAE,eAGqB+B,KAAK,yBAAyBkI,QACnE,GAAsC,IAAlCD,EAAuBnI,OAAc,CACrC,IACIqI,EAD4BF,EAAuB7H,SAASA,SAASgI,OACX,GAAGC,wBAC7DC,EAAmB,EACnBrK,EAAE,kCAAkC8C,GAAG,cACvCuH,EAAmBrK,EAAE,kCAAkCsK,eAEvDJ,EAA8BK,IAAML,EAA8BM,OAASH,EAAmBP,IAC9FC,GAAa,GAIrB,OAAOA,EAGX,SAASH,aAAazE,EAAewE,GACjC,IAAIlD,EAAUtB,EAAchD,SACxBsI,EAAahE,EAAQ,GAAG2D,wBAAwBG,IAGhDG,EAAe9K,wBAA0B,IAKzC+K,EAAaF,EAAaC,EAC1BE,EAAgBD,EAAanE,SAASC,EAAQF,IAAI,WAClDsE,EAAiBzB,SAAS0B,gBAAgBC,aAE9C,OAAmB,GAAdJ,GAAmC,EAAhBC,IAAsBA,GAD1BC,EAAiBH,GAKQ,IAArCjE,EAAQzF,OAAOgC,MAAM,KAAKnB,QAAgB8I,EAAa,KACvDhB,EAAcY,IAAMI,EACpBhB,EAAclD,QAAUA,EACxBkD,EAAcE,QAAS,IAEpB,GACa,EAAbc,GAIAA,EAAa,IAEpBhB,EAAcY,IAAMI,EACpBhB,EAAclD,QAAUA,EACxBkD,EAAcE,QAAS,GAQ/B,SAAS1I,0BAA0B6J,EAAgBC,GAC/C,IAAKvK,iBAAmBC,eACpBX,EAAE,oDAAoDI,SAEtDJ,EAAE,kCAAkCiG,OAAO,mCAC3CjG,EAAE,oDAAoDa,OAC1B,EAAxBmK,EAAenJ,QAAY,CAI3B,IAHA,IAAIqJ,EAAuBF,EAAehI,MAAM,OAC5ClB,EAAOkF,qBACPmE,EAAyB,GACpBjI,EAAI,EAAGA,EAAIgI,EAAqBrJ,OAAQqB,IACnC,IAANA,IACApB,GAAc,KAEV,EAAJoB,IACApB,GAAc,KAEV,EAAJoB,IACApB,GAAcoJ,EAAqBhI,GACnCiI,GAAkD,OAIlDA,EADAF,GAAsB/H,IAAMgI,EAAqBrJ,OAAS,EACjCsJ,EAAyB,6BAA+BD,EAAqBhI,GAAK,OAElFiI,EAAyB,YAAcrJ,EAAO,KAAOoJ,EAAqBhI,GAAK,OAGhHlD,EAAE,oDAAoDiG,OAAOkF,GAQ7D,IALA,IAAIC,EAAe5E,SAASxG,EAAE,kCAAkCuG,IAAI,iBAChEC,SAASxG,EAAE,kCAAkCuG,IAAI,kBACjD8E,EAAkBrL,EAAE,oDAAoDsL,QAAUF,EAClFG,EAAqBvL,EAAE,eAAesL,QACtCE,EAAW,GACUD,EAAlBF,GAAmD,EAAXG,GAC3CxL,EAAE,oDAAoDuG,IAAI,YAAaiF,EAAW,MAClFH,EAAkBrL,EAAE,oDAAoDsL,QAAUF,EAClFI,GAAsB,EAE1BxL,EAAE,oDAAoDuH,OAEtDkE,6BAKZ,SAASA,4BAELzL,EAAE,6BAA6BC,IAAI,SAASC,GAAG,QAAS,SAAUC,GAC9DA,EAAMuL,iBACN,IAAI5J,EAAO9B,EAAEG,EAAMG,eAAeG,KAAK,QACvCS,gBAAgBY,GAGhB,IAAIyH,EAAY,EACZlB,EAAYvG,EAAKhB,QAAQ,KACzBwH,EAAOxG,EAAKE,UAAUqG,EAAY,GAClCsD,EAAS3L,EAAE,eAAe+B,KAAK,6BAA+BuG,EAAO,MACrD,GAAjBqD,EAAO9J,SACN0H,EAAYoC,EAAOC,SAASrB,KAEhCvK,EAAE,aAAa6L,QAAQ,CAACtC,UAAWA,EAAY,KAAM,OAM7D,SAASuC,8BACApL,gBAAmBC,cACpBX,EAAE0D,OAAOvB,OAAOiH,UAAUlJ,GAAG,SAAU,SAAU6L,GAG7C,GAFwB/L,EAAE,kCAAkC8C,GAAG,YAExC,CAEnB,IACIiB,EADU/D,EAAE,eACM+B,KAAK,yBACvB4H,EAAgB,GAOpB,GANA3J,EAAE+D,GAASzB,KAAK,WACZ,GAAItC,EAAEwB,MAAMW,SAASW,GAAG,aAAe8G,aAAa5J,EAAEwB,MAAOmI,GACzD,OAAO,IAIXA,EAAclD,UAAYkD,EAAcE,OAGxC1I,0BADYwI,EAAclD,QAAQtE,SAASnB,QACV,QAIjCG,0BAA0BC,6BAA6B,MAS3E,SAAS4K,gCACL,IAAIC,GAAY,EAChBjM,EAAE,mBAAmBE,GAAG,YAAa,SAASC,GAC1C8L,GAAY,IAEhBjM,EAAE,mBAAmBE,GAAG,UAAW,SAAS6L,GACnCE,GACDzJ,YAAY,GAEhByJ,GAAY,IAKpB,SAASC,uBACL,IAAIC,EAAMzI,OAAOyE,SAASrG,KACtBgG,EAAQqE,EAAIrL,QAAQ,sBACpBsL,EAAaD,EAAInK,UAAU8F,EAAQ,IAAI5C,QAAQ,QAAS,IAExDnE,YADc,wBAAfqL,EACa,WAEAA,GAIpB,SAASC,iBACL3I,OAAO4I,WAAa,SAAUnM,GAC1B,GAAIA,EAAMoD,MAAO,CACb,IAAIgJ,EAAuBpM,EAAMoD,MAAMzB,KAKvC,IAJuC,IAAnC3B,EAAMoD,MAAMzB,KAAKhB,QAAQ,OACzByL,EAAuBpM,EAAMoD,MAAMzB,KAAKE,UAAU,EAAG7B,EAAMoD,MAAMzB,KAAKhB,QAAQ,OAG9EqH,SAASqE,WAAaD,EAAsB,CAI5C,QAA2B/I,IAAvBrD,EAAMoD,MAAME,SAA2D,IAAnCtD,EAAMoD,MAAMzB,KAAKhB,QAAQ,KAE7D4B,0BADcvC,EAAMoD,MAAMzB,KAAKE,UAAU7B,EAAMoD,MAAMzB,KAAKhB,QAAQ,KAAO,GACtCX,EAAMoD,MAAME,SAEZ,IAAnCtD,EAAMoD,MAAMzB,KAAKhB,QAAQ,KACzBG,mCAAkC,GAElCA,mCAAkC,GAItC,IAAIwL,EAAgBzM,EAAE,kCAAkC+B,KAAK,WAAa5B,EAAMoD,MAAMzB,KAAO,MAChE,IAAzB2K,EAAc5K,QACdtB,eAAekM,GAAe,MAWlD,SAASC,qCACL,IAAKhM,iBAAmBC,aAAc,CAGlCf,wBAA0BI,EAAE,kCAAkCsK,cAC9D,IAAIxI,EAAOqG,SAASrG,KAChB6K,EAAU7K,EAAKhB,QAAQ,MAEV,IAAb6L,GAAkBA,IAAY7K,EAAKD,OAAS,EAC5CZ,mCAAkC,GAElCA,mCAAkC,IAM9C,SAASA,kCAAkCgG,GAClCvG,gBAAmBC,eAChBsG,IAAWjH,EAAE,kCAAkC8C,GAAG,aAElD9C,EAAE0D,OAAOvB,OAAOiH,UAAUnJ,IAAI,UAC9BD,EAAE,kCAAkC4M,UAAU,IAAK,WAC/C3D,6BAEIhC,GAAUjH,EAAE,kCAAkC8C,GAAG,cAEzD9C,EAAE0D,OAAOvB,OAAOiH,UAAUnJ,IAAI,UAC9BD,EAAE,kCAAkC6M,QAAQ,IAAK,WAC7C5D,6BAMhB,SAASvI,eACL,OAAIV,EAAE0D,QAAQ4H,SAAWzL,YAO7B,SAASc,aACL,OAAIX,EAAE0D,QAAQ4H,SAAWxL,WAAaE,EAAE0D,QAAQ4H,QAAUzL,YAyB9D,SAASiN,oBAAoBC,GACzB,IAAIC,EAAW,oBAAsBD,EAAc/K,UAAU,GACzDY,OAAWY,GACgB,IAA3BwJ,EAASlM,QAAQ,OACjBkM,EAAWA,EAAShL,UAAU,EAAGgL,EAASlM,QAAQ,OACH,IAA3CiM,EAAcjM,QAAQ,gBACtB8B,GAAW,GACwC,IAA5CmK,EAAcjM,QAAQ,mBAC7B8B,GAAW,IAGnB,IAAIW,EAAQ,CAAEzB,KAAMkL,GAKpB,YAJiBxJ,IAAbZ,IACAW,EAAME,OAASb,GAEnBc,OAAOC,QAAQsJ,aAAa1J,EAAO,KAAMwJ,GAClCC,EAQX,SAASE,gCACL,IAAIhE,EAAUlJ,EAAE,eAEMkJ,EAAQnH,KADM,2CAEpB7B,GAAG,QAAQ,SAAUC,GACjCA,EAAMuL,iBACN,IAAIpD,EAAO9G,KAAK8G,KAGhB9F,YAFa0G,EAAQnH,KAAKuG,GACNsD,SAASrB,OAKrCvK,EAAEoJ,UAAU+D,MAAM,WACdpN,cACAiM,gCACAE,uBACAG,iBACAa,gCACAR,qCACAjF,8BACA5D,6BACA,IAAI2E,EAAaT,iBACjBQ,uBAAuBC,GACvB,IAAIiE,EAAgB1E,gBAAe,GAYnC,GAXI0E,EACAlM,eAAekM,GAAe,GACvBjE,GACPjI,eAAeiI,GAAY,GAE/BrH,0BAA0BC,6BAA6B,GAElDV,gBAAmBC,cACpBsI,yBAGyB,KAAzBvF,OAAOyE,SAASG,WAAwC9E,IAAzBE,OAAOyE,SAASG,OACD,IAA9C5E,OAAOyE,SAASG,KAAKxH,QAAQ,YAAoB,CACjD,IAAI8B,GACkD,IAAlDc,OAAOyE,SAASG,KAAKxH,QAAQ,gBAC7B8B,GAAW,GAC+C,IAAnDc,OAAOyE,SAASG,KAAKxH,QAAQ,mBACpC8B,GAAW,GAEf,IAAI0F,EAAO5E,OAAOyE,SAASG,KAAKtG,UAAU,GAC1C,IAA2B,IAAvBsG,EAAKxH,QAAQ,KAEb4B,0BADc4F,EAAKtG,UAAUsG,EAAKxH,QAAQ,KAAO,EAAGwH,EAAKxH,QAAQ,MAC9B8B","file":"js/04-configs.js","sourcesContent":["/*******************************************************************************\n * Copyright (c) 2018 IBM Corporation and others.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     IBM Corporation - initial API and implementation\n *******************************************************************************/\n\nvar subSectionClass = \"subsection\";\nvar subHeadingClass = \"subHeading\";\nvar maxIndentLevel = 7;\nvar minIndentLevel = 3;\nvar contentBreadcrumbHeight = 0;\nvar mobileWidth = 767;\nvar ipadWidth = 1024;\n\nfunction addTOCClick() {\n    var onclick = function (event) {\n        // clean out the breadcrumb so that it cannot be clicked on while loading/repositioning the doc\n        $(\".contentStickyBreadcrumbHeader .stickyBreadcrumb\").remove();\n        var resource = $(event.currentTarget);\n        setSelectedTOC(resource, false);\n        var currentHref = resource.attr(\"href\");\n\n        if (isMobileView() || isIPadView()) {\n            $('.nav-container .nav-panel-menu').removeClass('is-active'); // Hide the nav menu\n            $('footer').hide();\n        }\n\n        if (currentHref.indexOf(\"#\") === -1) {\n            // loading initial content\n            // - update main breadcrumb \n            // Note: content breadcrumb not visible with initial loading\n            updateTitle(resource.text());\n        } else {\n            // positioning to one of the 2nd level subtitiles\n            // - enable content breadcrumb\n            // - scroll to the 2nd level subtitle\n            handleContentBreadcrumbVisibility(true);\n        }\n        updateHashInUrl(currentHref);\n        createClickableBreadcrumb(getContentBreadcrumbTitle(), true);\n    };\n\n    $(\".nav-container .nav-panel-menu a\").off(\"click\").on(\"click\", onclick);\n\n    $(\".nav-container .nav-panel-menu a\").off('keypress').on('keypress', function (event) {\n        event.stopPropagation();\n        // Space key\n        if (event.which === 13 || event.keyCode === 13 || event.which === 32 || event.keyCode === 32) {\n            $(this).trigger('click');\n        }\n    });\n}\n\n// Add css to selected TOC. If scrollTo is specified, scroll the TOC element into viewport.\nfunction setSelectedTOC(resource, scrollTo) {\n    var currentTOCSelected = $(\".nav-menu .toc_sub_selected.is-current-page\");\n    var newHref = resource.attr(\"href\");\n    \n    if(newHref){\n        if (currentTOCSelected.length === 1) {\n            var href = currentTOCSelected.find(\"a\").attr(\"href\");\n            if (href.indexOf(\"#\") !== -1) {\n                href = href.substring(0, href.indexOf(\"#\"));\n            }\n            // remove all hash href created based on the content if a different TOC element is clicked\n            if (newHref.indexOf(href) === -1) {\n                removeHashRefTOC(href);\n            }\n            currentTOCSelected.removeClass(\"is-current-page\");\n            if (currentTOCSelected.hasClass(\"toc_main_selected\")) {\n                currentTOCSelected.removeClass(\"toc_main_selected\");\n            } else if (currentTOCSelected.hasClass(\"toc_sub_selected\")) {\n                currentTOCSelected.removeClass(\"toc_sub_selected\");\n            }\n        }\n        $('.is-current-page').removeClass('is-current-page');\n        resource.parent().addClass(\"is-current-page\");\n        if (newHref.indexOf(\"#\") === -1) {\n            resource.parent().addClass(\"toc_main_selected\");\n        } else {\n            resource.parent().addClass(\"toc_sub_selected\");\n        }\n    }\n}\n\n// Remove the 2nd level subtitles from TOC\nfunction removeHashRefTOC(href) {\n    var hashHref = $(\".nav-container .nav-panel-menu\").find(\"a[href^='\" + href + \"#']\");\n    $(hashHref).each(function () {\n        $(this).parent().remove();\n    });\n}\n\n// Update title in browser tab to show current page\nfunction updateTitle(currentPage) {\n    $(\"title\").text(currentPage + \" - Server Config - Open Liberty\");\n}\n\n// History: \n//      From what we can recall from memory, the reason why we have this method is because\n//      in smaller resolutions, for some reason, we need to animate the scroll to allow\n//      a delay for the scrollTop to work.  In large resolutions, the animation scroll is\n//      is not needed.\n// Method:\nfunction scrollToPos(pos) {\n    return;\n    if (isMobileView()) {\n        // $(\"#background_container\").css('height', iframeContents.height() + \"px\");\n        $('html, body').animate({\n            scrollTop: pos\n        }, 400);\n        $('footer').show();\n    } else {\n        $('html, body').animate({\n            scrollTop: pos\n        }, 400);\n    }\n}\n\n// Handle history event involving expand/collapse toggle button\nfunction handleExpandCollapseState(titleId, isExpand) {\n    var hrefElement = $(\"article.doc\").find('a[id=\"' + titleId + '\"]');\n    if (hrefElement.length === 1) {\n        if (!hrefElement.is(\":visible\")) {\n            // make its parent(s) visible\n            var titleSplits = titleId.split(\"/\");\n            var parentTitleId = titleSplits[0];\n            for (var i = 1; i < titleSplits.length - 1; i++) {\n                parentTitleId += \"/\" + titleSplits[i];\n                var parentToggleButton = $(\"article.doc\").find(\"a[id='\" + parentTitleId + \"']\").parent().find(\".toggle\");\n                if (parentToggleButton.attr(\"collapsed\") === \"true\") {\n                    handleExpandCollapseToggleButton(parentToggleButton, false);\n                }\n            }\n        }\n        var toggleButton = $(\"article.doc\").find(\"a[id='\" + titleId + \"']\").parent().find(\".toggle\");\n        if ((isExpand === true && (toggleButton.attr(\"collapsed\") === \"true\")) ||\n            (isExpand === false && (toggleButton.attr(\"collapsed\") === \"false\"))) {\n            handleExpandCollapseToggleButton(toggleButton, false);\n        }\n    }\n}\n\n// Add a browser history event with pushState. The event is to be used by the window.onpopstate to handle\n// the forward and backward history events.\n// The state contains two pieces of info: \n//   href: the content url including hash to point to the nested title\n//   expand: use only if the event is triggered by the toggle button to expand/collapse the content\nfunction updateHashInUrl(href, isExpand) {\n    var hashInUrl = href;\n    if (href.indexOf(\"/config/\") !== -1) {\n        hashInUrl = href.substring(17);\n    }\n    // a null is used by mobile for the TOC page\n    var state = null;\n    if (href !== \"\") {\n        state = { href: href };\n    }\n    if (isExpand !== undefined) {\n        if (isExpand) {\n            hashInUrl += \"&expand=true\";\n            state.expand = true;\n        } else {\n            hashInUrl += \"&expand=false\";\n            state.expand = false;\n        }\n    }\n    window.history.pushState(state, null, '#' + hashInUrl);\n}\n\n/// Modify the flat hierachary of the content to include nested levels with expand/collapse button\nfunction handleSubHeadingsInContent() {\n    var contentTitle = getContentBreadcrumbTitle();\n    var anchors = $(\"article.doc div.paragraph > p > a\");\n    var deferAddingExpandAndCollapseToggleButton = [];\n\n    if (anchors.length === 0) {\n        addAnchorToSubHeadings();\n        anchors = $(\"article.doc div.paragraph > p > a\");\n    }\n\n    // in reverse order so that we can hide all the nested headings\n    $($(anchors).get().reverse()).each(function () {\n        var subHeading = $(this).parent();\n        var anchorTitle = modifySubHeading(subHeading, contentTitle);\n        var table = getTableForSubHeading(subHeading);\n        var anchorTitleId = $(this).attr(\"id\");\n        var indentLevels = calcIndentAndAddClass(subHeading, anchorTitle, table, anchorTitleId);\n\n        if (indentLevels >= minIndentLevel) {\n            if (table) {\n                addExpandAndCollapseToggleButtons(subHeading, anchorTitleId);\n            } else {\n                deferAddingExpandAndCollapseToggleButton.push({ heading: subHeading, anchorTitleId: anchorTitleId });\n            }\n        }\n    });\n\n    handleDeferredExpandCollapseElements(deferAddingExpandAndCollapseToggleButton);\n}\n\nfunction addAnchorToSubHeadings() {\n    var subHeadings = $(\"article.doc > div.paragraph > p > strong\");\n    $($(subHeadings)).each(function() {\n        var parent = $(this).parent();\n        var id = parent.text().replace(/ > /g, \"/\");\n        var anchorElement = $('<a id=\"' + id + '\"></a>');\n        parent.prepend(anchorElement);\n    });\n}\n\n// Extract the first part of the content title as the breadcrumb title\nfunction getContentBreadcrumbTitle() {\n    var title = $('article.doc h1.page').text();\n    var parsedTitle = getTitle(title);\n    return parsedTitle;\n}\n\nfunction getTitle(title) {\n    var retTitle = title;\n    var openParamIndex = title.indexOf(\"(\");\n    var closeParamIndex = title.indexOf(\")\");\n    if (openParamIndex !== -1 & closeParamIndex != -1) {\n        retTitle = title.substring(openParamIndex + 1, closeParamIndex);\n    }\n    return retTitle.trim();\n}\n\n// remove strong from the last heading\nfunction modifySubHeading(subHeadingElement, contentTitle) {\n    var strong = subHeadingElement.find(\"strong\");\n    var anchorTitle;\n    if (strong.length > 0) {\n        anchorTitle = strong.text();\n    } else {\n        anchorTitle = subHeadingElement.text();\n    }\n    if (anchorTitle !== undefined) {\n        var title = contentTitle + \" > \" + anchorTitle;\n        var lastIndex = title.lastIndexOf(\">\");\n        if (lastIndex !== -1) {\n            var titleStrong = title.substring(0, lastIndex + 1);\n            var titlePlain = title.substring(lastIndex + 1);\n            strong.remove();\n            subHeadingElement.append(\"<strong>\" + titleStrong + \"</strong>\" + titlePlain);\n        }\n\n        // fix incomplete tag id cuz of colon\n        if (title.indexOf(\".\") !== -1) {\n            var titleId = title.replace(/ > /g, \"/\");\n            subHeadingElement.find(\"a\").attr(\"id\", titleId);\n        }\n    }\n    return title;\n}\n\n// get the table belonging to the subheading\nfunction getTableForSubHeading(subHeadingElement) {\n    var next = subHeadingElement.parent().next();\n    while ((next.length === 1) && !next.is(\"table\") && (next.find(\"p > a\").length === 0)) {\n        next = next.next();\n    }\n    if (next.is(\"table\")) {\n        return next;\n    } else {\n        return undefined;\n    }\n}\n\n// calculate the heading indentation\nfunction calcIndentAndAddClass(subHeadingElement, title, table, dataId) {\n    var levels;\n    if (title) {\n        var splits = title.split(\">\");\n        levels = splits.length;\n        if (levels > maxIndentLevel) {\n            levels = maxIndentLevel;\n        }\n        var marginLeft;\n        if (levels > minIndentLevel) {\n            marginLeft = (levels - minIndentLevel) * 49 + 69;\n        }\n\n        subHeadingElement.addClass(subHeadingClass);\n        if (levels >= minIndentLevel) {\n            subHeadingElement.addClass(subSectionClass);\n            setDataId(subHeadingElement, dataId);\n            if (marginLeft !== undefined) {\n                subHeadingElement.css(\"margin-left\", marginLeft + \"px\");\n            }\n            // add subsection class + extra left margin indentation\n            var next = subHeadingElement.parent().next();\n            while ((next.length === 1) && !next.is(\"table\") && (next.find(\"p > a\").length === 0)) {\n                next.addClass(subSectionClass);\n                setDataId(next, dataId);\n                if (marginLeft !== undefined) {\n                    next.css(\"margin-left\", marginLeft + \"px\");\n                }\n                next = next.next();\n            }\n            if (table) {\n                table.addClass(subSectionClass);\n                setDataId(table, dataId);\n                var width = parseInt(table.css(\"width\").replace(\"px\", \"\"));\n                if (marginLeft !== undefined) {\n                    table.css(\"margin-left\", marginLeft - 10 + \"px\");\n                    var marginValue = marginLeft - 10;\n                    table.css(\"width\", \"calc(100% + 20px - \" + marginLeft + \"px - 10px)\");\n                } else {\n                    table.css(\"width\", \"calc(100% + 20px - 59px)\");\n                }\n            }\n        }\n    }\n    return levels;\n}\n\nfunction setDataId(element, dataId) {\n    element.attr(\"data-id\", dataId);\n}\n\nfunction getDataId(element) {\n    return element.attr(\"data-id\");\n}\n\nfunction addExpandAndCollapseToggleButtons(subHeading, titleId) {\n    var toggleButton = $('<div class=\"toggle\" collapsed=\"true\" tabindex=0><img src=\"/img/all_guides_plus.svg\" alt=\"Expand\" aria-label=\"Expand\" /></div>');\n    handleExpandCollapseTitle(titleId, false);\n    toggleButton.on('click', function () {\n        handleExpandCollapseToggleButton($(this), true);\n    });\n    toggleButton.on('keypress', function (event) {\n        event.stopPropagation();\n        // Enter or space key\n        if (event.which === 13 || event.keyCode === 13 || event.which === 32 || event.keyCode === 32) {\n            toggleButton.trigger('click');\n        }\n    });\n\n    // listen for focus causing by tab. not mouse\n    var mousedown = false;\n    toggleButton.on('mousedown', function() {\n        mousedown = true;\n    });\n    toggleButton.on('focus', function() {\n        mousedown = false;\n    });\n\n    subHeading.prepend(toggleButton);\n}\n\nfunction handleExpandCollapseToggleButton(buttonElement, updateUrl) {\n    var collapsed = buttonElement.attr('collapsed');\n    var titleId = getDataId(buttonElement.parent());\n    if (collapsed === \"true\") {\n        // Expand to show the table and nested elements\n        buttonElement.empty().append($('<img src=\"/img/all_guides_minus.svg\" alt=\"Collapse\" aria-label=\"Collapse\"/>'));\n        buttonElement.attr('collapsed', false);\n        // this call needs to be done after collapsed is set to false\n        handleExpandCollapseTitle(titleId, true);\n    } else {\n        // Collapse the table and nested elements\n        handleExpandCollapseTitle(titleId, false);\n        buttonElement.empty().append($('<img src=\"/img/all_guides_plus.svg\" alt=\"Expand\" aria-label=\"Expand\"/>'));\n        buttonElement.attr('collapsed', true);\n    }\n    if (updateUrl) {\n        var href = getSelectedDocHtml() + \"#\";\n        updateHashInUrl(href + titleId, true);\n    }\n}\n\nfunction handleExpandCollapseTitle(titleId, isShow) {\n    var content = $('article.doc');\n    var matchingElements = content.find('[data-id^=\"' + titleId + '\"]');\n    var hideElements = [];\n    $(matchingElements).each(function () {\n        var dataId = getDataId($(this));\n        if (isShow) {\n            // don't show already collapsed element\n            var toggleButton = $(this).find(\".toggle\");\n            if (toggleButton.length === 1) {\n                if (toggleButton.attr(\"collapsed\") === \"true\") {\n                    var elements = content.find(\"[data-id^='\" + dataId + \"']\");\n                    $(elements).each(function () {\n                        var nestedDataId = getDataId($(this));\n                        if ((nestedDataId === dataId && $(this).is(\"table\")) ||\n                            /* detect id with same string + more such as http-method-omission when matching http-method */\n                            (nestedDataId !== dataId && (nestedDataId.indexOf(dataId + \"/\") === 0))) {\n                            hideElements.push($(this));\n                        }\n                    })\n                }\n            }\n\n            if (dataId === titleId && $(this).is(\"div\") && $(this).hasClass(\"collapseMargin\")) {\n                $(this).removeClass(\"collapseMargin\");\n            }\n            $(this).show();\n        } else {\n            // don't hide the clicked toggle element title and description\n            if ((dataId === titleId && $(this).is(\"table\")) || (dataId !== titleId && (dataId.indexOf(titleId + \"/\") === 0))) {\n                $(this).hide();\n            } else if (dataId === titleId && $(this).is(\"div\")) {\n                $(this).addClass(\"collapseMargin\");\n            }\n        }\n    });\n    $(hideElements).each(function () {\n        $(this).hide();\n    })\n    if (!isMobileView()) {\n        content.trigger(\"scroll\"); // trigger a scroll event to update the breadcrumb\n    }\n}\n\nfunction handleDeferredExpandCollapseElements(deferredElements) {\n    $(deferredElements).each(function () {\n        var subHeading = $(this).attr(\"heading\");\n        var titleId = $(this).attr(\"anchorTitleId\");\n        var matchingElements = $('article.doc').find('[data-id^=\"' + titleId + '\"]');\n        $(matchingElements).each(function () {\n            var dataId = getDataId($(this));\n            if (dataId !== titleId && (dataId.indexOf(titleId + \"/\") === 0)) {\n                addExpandAndCollapseToggleButtons(subHeading, titleId);\n                return false;\n            }\n        });\n    });\n}\n\n// change the evenly divided fixed cell width (25%)\nfunction modifyFixedTableColumnWidth() {\n    var article = $('article.doc');\n    var colgroups = article.find(\"colgroup\");\n    var colWidths = [];\n    if (!isMobileView()) {\n        colWidths[4] = [\"25%\", \"15%\", \"15%\", \"45%\"];\n    // } else {\n    //     colWidths[4] = [\"25%\", \"25%\", \"15%\", \"35%\"];\n    }\n    $(colgroups).each(function () {\n        if (isMobileView()) {\n            $(this).remove();\n        } else {\n            var cols = $(this).find(\"col\");\n            var currentColWidths = colWidths[cols.length];\n            if (currentColWidths) {\n                $(cols).each(function (index) {\n                    $(this).css(\"width\", currentColWidths[index]);\n                })\n            }\n        }\n    })\n}\n\n// Find the table of content element for the content. If processHash is specified, return\n// the TOC sub element corresponding to the hash. If there is no TOC sub element for it\n// (as in the case of the hash populated by clicking on the content breadcrumb), return undefined.\nfunction findTOCElement(processHash) {\n    // Remove the path and version from the url\n    var configIndex = location.href.indexOf('/config/');\n    var href = location.href.substring(configIndex + 8);\n    var slashIndex = href.indexOf('/');\n    href = href.substring(slashIndex + 1); // Remove Antora version from href\n    var hashIndex = href.indexOf('#');\n    if(hashIndex !== -1){\n        var hash = href.substring(hashIndex);\n        href = href.substring(0, hashIndex);\n    }    \n\n    var matchingTOCElement;\n    if (!processHash) {\n        matchingTOCElement = $(\".nav-container .nav-panel-menu a[href='\" + href + \"']\");\n    } else {\n        if (hash !== undefined && hash !== \"\") {\n            href = href + hash;\n            matchingTOCElement = $(\".nav-container .nav-panel-menu a[href='\" + href + \"']\");\n            if (matchingTOCElement.length === 0) {\n                matchingTOCElement = undefined;\n            }\n        }\n    }\n    return matchingTOCElement;\n}\n\n// add the second level headings to the TOC\nfunction handleSubHeadingsInTOC(TOCElement) {\n    var href = getSelectedDocHtml();\n    removeHashRefTOC(href);      \n\n    var anchors = $(\"article.doc > div.paragraph > p > a\");\n    var anchorLI = TOCElement.parent();\n    var depth = anchorLI.data('depth') + 1; // Get the data-depth of the parent to add to the subchildren\n    var anchorHref = TOCElement.attr(\"href\");\n    var ul = $(\"<ul class='nav-list'></ul>\");\n    anchorLI.append(ul);\n    $(anchors).each(function () {\n        var subHeading = $(this).parent();\n        if (subHeading.hasClass(\"subsection\") === false) {\n            var anchorTitleId = $(this).attr(\"id\");\n            var anchorTitleText = subHeading.text();\n            var anchorTitleTextIndex = anchorTitleText.lastIndexOf(\" > \");\n            if (anchorTitleTextIndex !== -1) {\n                anchorTitleText = anchorTitleText.substring(anchorTitleTextIndex + 3);\n            }\n            var tocLI = $('<li class=\"nav-item\" data-depth=\"' + depth + '\"><a href=\"' + anchorHref + '#' + anchorTitleId + '\">' + anchorTitleText + '</a></li>');            \n            ul.append(tocLI);\n        }\n    });\n    addTOCClick();\n}\n\nfunction getSelectedDocHtml() {\n    var currentTOCSelected = $(\".is-current-page > a\");\n    var href = \"\";\n    if (currentTOCSelected.length === 1) {\n        href = currentTOCSelected.attr(\"href\");\n        if (href.indexOf(\"#\") !== -1) {\n            href = href.substring(0, href.indexOf(\"#\"));\n        }\n    }\n    return href;\n}\n\nfunction handleContentScrolling() {\n    if (!isMobileView()) {\n        var article = $('article.doc');\n        var lastViewPos = -99999;\n        \n        var onContentScroll = function () {\n            // determine whether it is scrolling up or down\n            var scrollDown = false;\n            var currentScrollTop = $(this).scrollTop();\n            if (lastViewPos < currentScrollTop) {\n                scrollDown = true;\n            }\n\n            lastViewPos = currentScrollTop;\n            var breadcrumbVisible = $('.contentStickyBreadcrumbHeader').is(':visible');\n\n            if(article.find('.page').text() == \"Server configuration overview\") {\n                // No top breadcrumb bar for overview pages,\n                // therefore skip all the breadcrumb handling code\n                return;\n            }\n\n            // content breadcrumb only appears after content title and its first table are out of view\n            var initialContentInView = isInitialContentInView(lastViewPos);\n            if (breadcrumbVisible && !scrollDown) {\n                // breadcrumb is visible and a scrolling up case, check whether initial content is back in view to\n                // determine whether breadcrumb stays visible or not\n                if (initialContentInView) {\n                    breadcrumbVisible = false;\n                    handleContentBreadcrumbVisibility(false);\n                }\n            } else if (!breadcrumbVisible && scrollDown) {\n                // breadcrumb is not visible and a scrolling down case, check whether initial content is out of view to\n                // determine whether breadcrumb switches to visible\n                if (!initialContentInView) {\n                    breadcrumbVisible = true;\n                    handleContentBreadcrumbVisibility(true);\n                }\n            }\n            if (breadcrumbVisible) {\n                // go through subheadings to determine the content of breadcrumb\n                var anchors = article.find(\"div.paragraph > p > a\");\n                var closestAnchor = {};\n                $(anchors).each(function () {\n                    if ($(this).parent().is(\":visible\") && isInViewport($(this), closestAnchor)) {\n                        return false;\n                    }\n                });\n\n                if (closestAnchor.element && !closestAnchor.inView) {\n                    var title = closestAnchor.element.parent().text();\n                    createClickableBreadcrumb(title, true);\n                } else {\n                    createClickableBreadcrumb(getContentBreadcrumbTitle(), true);\n                }\n            }\n        };\n\n        $(window.parent.document).off('scroll').on('scroll', onContentScroll);\n    }\n}\n\nfunction isInitialContentInView(currentViewPos) {\n    var inViewPort = true;\n    var article = $('article.doc');\n   \n    // look for the last element for the initial content\n    var firstSubheadingElement = article.find(\"div.paragraph > p > a\").first();\n    if (firstSubheadingElement.length === 1) {\n        var lastInitialContentElement = firstSubheadingElement.parent().parent().prev();\n        var lastInitialContentElementRect = lastInitialContentElement[0].getBoundingClientRect();\n        var breadcrumbHeight = 0;\n        if ($(\".contentStickyBreadcrumbHeader\").is(':visible')) {\n            breadcrumbHeight = $(\".contentStickyBreadcrumbHeader\").outerHeight();\n        }\n        if (lastInitialContentElementRect.top + lastInitialContentElementRect.height - breadcrumbHeight < currentViewPos) {\n            inViewPort = false;\n        }\n    }\n\n    return inViewPort;\n}\n\nfunction isInViewport(anchorElement, closestAnchor) {\n    var element = anchorElement.parent();\n    var elementTop = element[0].getBoundingClientRect().top;\n    // factor in the fixed header height including the main header if the parent scrollbar is scrolled to the \n    // bottom to reveal the footer\n    var headerHeight = contentBreadcrumbHeight + 101; // Nav height is 101 but we can't calculate it.\n\n    // timing problem that the height could be overriden and be 1. Stepping thru debugger won't have the problem.\n    //var contentBreadcrumbHeight = $(\".contentStickyBreadcrumbHeader\").outerHeight();\n\n    var contentTop = elementTop - headerHeight;\n    var contentBottom = contentTop + parseInt(element.css(\"height\"));\n    var viewportHeight = document.documentElement.clientHeight;\n    var contentHeight = viewportHeight - headerHeight;\n    if ((contentTop >= 0 || contentBottom > 0) && contentBottom <= contentHeight) {\n        // element is not covered by the breadcrumb and is in the viewport - we're done\n        // if the next element is the second level subheading and is near the top of the viewport,\n        // return it to be used as the breadcrumb\n        if (element.text().split(\">\").length === 2 && contentTop < 50) {\n            closestAnchor.top = contentTop;\n            closestAnchor.element = element;\n            closestAnchor.inView = true;\n        }\n        return true;\n    } else if (contentTop > 0) {\n        // for case when there is no subheading shown in the viewport and no need to go thru the rest of the subheadings once\n        // a subheading is found out of viewport\n        return true;\n    } else if (contentTop < 0) {\n        // element is covered by breadcrumb\n        closestAnchor.top = contentTop;\n        closestAnchor.element = element;\n        closestAnchor.inView = false;\n        return false;\n    } else {\n        // should not be here\n        return false;\n    }\n}\n\nfunction createClickableBreadcrumb(breadcrumbText, highlightLastItem) {\n    if (!isMobileView() && !isIPadView()) {\n        $('.contentStickyBreadcrumbHeader .stickyBreadcrumb').remove();\n        // hide it for now until the font size is determined\n        $(\".contentStickyBreadcrumbHeader\").append(\"<div class='stickyBreadcrumb'/>\");\n        $('.contentStickyBreadcrumbHeader .stickyBreadcrumb').hide();\n        if (breadcrumbText.length > 0) {\n            var breadcrumbTextSplits = breadcrumbText.split(\" > \");\n            var href = getSelectedDocHtml();\n            var stickyHeaderBreadcrumb = \"\";\n            for (var i = 0; i < breadcrumbTextSplits.length; i++) {\n                if (i === 1) {\n                    href = href + \"#\";\n                }\n                if (i > 1) {\n                    href = href + \"/\";\n                }\n                if (i > 0) {\n                    href = href + breadcrumbTextSplits[i];\n                    stickyHeaderBreadcrumb = stickyHeaderBreadcrumb + \" > \";\n                }\n\n                if (highlightLastItem && (i === breadcrumbTextSplits.length - 1)) {\n                    stickyHeaderBreadcrumb = stickyHeaderBreadcrumb + \"<a class='lastParentItem'>\" + breadcrumbTextSplits[i] + \"</a>\";\n                } else {\n                    stickyHeaderBreadcrumb = stickyHeaderBreadcrumb + \"<a href='\" + href + \"'>\" + breadcrumbTextSplits[i] + \"</a>\";\n                }\n            }\n            $(\".contentStickyBreadcrumbHeader .stickyBreadcrumb\").append(stickyHeaderBreadcrumb);\n\n            // adjust the breadcrumb font if its width is larger than the page width\n            var paddingWidth = parseInt($(\".contentStickyBreadcrumbHeader\").css(\"padding-left\")) +\n                parseInt($(\".contentStickyBreadcrumbHeader\").css(\"padding-right\"));\n            var breadcrumbWidth = $(\".contentStickyBreadcrumbHeader .stickyBreadcrumb\").width() + paddingWidth;\n            var contentWindowWidth = $('article.doc').width();\n            var fontSize = 32;\n            while (breadcrumbWidth > contentWindowWidth && fontSize > 0) {\n                $(\".contentStickyBreadcrumbHeader .stickyBreadcrumb\").css(\"font-size\", fontSize + \"px\");\n                breadcrumbWidth = $(\".contentStickyBreadcrumbHeader .stickyBreadcrumb\").width() + paddingWidth;\n                fontSize = fontSize - 2;\n            }\n            $(\".contentStickyBreadcrumbHeader .stickyBreadcrumb\").show();\n\n            addContentBreadcrumbClick();\n        }\n    }\n}\n\nfunction addContentBreadcrumbClick() {\n    // listen to breadcrumb element that has a href in it\n    $(\".stickyBreadcrumb a[href]\").off(\"click\").on(\"click\", function (event) {\n        event.preventDefault();\n        var href = $(event.currentTarget).attr(\"href\");\n        updateHashInUrl(href);\n\n        // Find anchor and jump to it\n        var scrollTop = 0;\n        var hashIndex = href.indexOf('#');\n        var hash = href.substring(hashIndex + 1); \n        var anchor = $('article.doc').find(\"div.paragraph > p > a[id='\" + hash + \"']\");\n        if(anchor.length == 1){\n            scrollTop = anchor.offset().top;\n        }    \n        $('html,body').animate({scrollTop: scrollTop - 101}, 500);         \n    });\n}\n\n// When the parent window scrolls, it affects the viewport of the content. Hence needs to adjust\n// the content breadcrumb.\nfunction handleParentWindowScrolling() {\n    if (!isMobileView() && !isIPadView()) {\n        $(window.parent.document).on('scroll', function (e) {\n            var breadcrumbVisible = $('.contentStickyBreadcrumbHeader').is(':visible');\n            // for parent window scrolling, need to adjust breadcrumb only when content breadcrumb is visible\n            if (breadcrumbVisible) {\n                // go through subheadings to determine the content of breadcrumb\n                var article = $('article.doc');\n                var anchors = article.find(\"div.paragraph > p > a\");\n                var closestAnchor = {};\n                $(anchors).each(function () {\n                    if ($(this).parent().is(\":visible\") && isInViewport($(this), closestAnchor)) {\n                        return false;\n                    }\n                });\n\n                if (closestAnchor.element && !closestAnchor.inView) {\n                    // normal scrolling elements\n                    var title = closestAnchor.element.parent().text();\n                    createClickableBreadcrumb(title, true);\n                } else {\n                    // scrolling when the previous 2nd level title and its nested titles are all\n                    // scrolled passed the viewport and the next 2nd level title comes in view\n                    createClickableBreadcrumb(getContentBreadcrumbTitle(), true);\n                }\n            }\n        })\n    }\n}\n\n// If the doc content is in focus by means of other than a mouse click, then goto the top of the \n// doc.\nfunction addConfigContentFocusListener() {\n    var mousedown = false;\n    $(\"#config_content\").on('mousedown', function(event) {\n        mousedown = true;\n    });\n    $('#config_content').on(\"focusin\", function(e) {\n        if (!mousedown) {\n            scrollToPos(0);\n        }\n        mousedown = false;\n    });\n}\n\n// Handle content loading based on the url\nfunction handleInitialContent() {\n    var url = window.location.href;\n    var index = url.indexOf('/reference/config/');\n    var configName = url.substring(index + 18).replace(\".html\", \"\");\n    if(configName === \"serverConfiguration\") {\n        updateTitle(\"OVERVIEW\");\n    } else {\n        updateTitle(configName);\n    }    \n}\n\nfunction handlePopstate() {\n    window.onpopstate = function (event) {\n        if (event.state) {\n            var popstateHrefPathname = event.state.href;\n            if (event.state.href.indexOf(\"#\") !== -1) {\n                popstateHrefPathname = event.state.href.substring(0, event.state.href.indexOf(\"#\"));\n            }\n\n            if (location.pathname === popstateHrefPathname) {\n                // if content document is already loaded, \n                // - expand/collapse the subheading if the expand property is set\n                // - scroll to the matching heading\n                if (event.state.expand !== undefined && event.state.href.indexOf(\"#\") !== -1) {\n                    var titleId = event.state.href.substring(event.state.href.indexOf('#') + 1);\n                    handleExpandCollapseState(titleId, event.state.expand);\n                }\n                if (event.state.href.indexOf(\"#\") !== -1) {\n                    handleContentBreadcrumbVisibility(true);\n                } else {\n                    handleContentBreadcrumbVisibility(false);\n                }\n\n                // select TOC\n                var TOCSubElement = $(\".nav-container .nav-panel-menu\").find(\"a[href='\" + event.state.href + \"']\");\n                if (TOCSubElement.length === 1) {\n                    setSelectedTOC(TOCSubElement, true);\n                }\n            }\n        }\n    }\n}\n\n// Determine the content breadcrumb visibility:\n// - content breadcrumb not display in initial content\n// - once the overview of the content is scrolled thru, display the content breadcrumb right before the\n//   first 2nd subtitle is scrolled into.\nfunction initialContentBreadcrumbVisibility() {\n    if (!isMobileView() && !isIPadView()) {\n        // save the content breadcrumb height to be used later as the height could be 1 during the transition \n        // to display it in isInViewPort function\n        contentBreadcrumbHeight = $(\".contentStickyBreadcrumbHeader\").outerHeight();\n        var href = location.href;\n        var hashPos = href.indexOf(\"#\");\n        // no breadcrumb when there is no hash or a trailing # \n        if (hashPos === -1 || hashPos === href.length - 1) {\n            handleContentBreadcrumbVisibility(false);\n        } else {\n            handleContentBreadcrumbVisibility(true);\n        }\n    }\n}\n\n// Enable/disable content breadcrumb visibility\nfunction handleContentBreadcrumbVisibility(isShow) {\n    if (!isMobileView() && !isIPadView()) {\n        if (isShow && !$('.contentStickyBreadcrumbHeader').is(\":visible\")) {\n            // with scrolling listener not on the content anymore, disable scrolling listener until animation is done\n            $(window.parent.document).off('scroll');\n            $('.contentStickyBreadcrumbHeader').slideDown(500, function() {\n                handleContentScrolling();\n            });\n        } else if (!isShow && $('.contentStickyBreadcrumbHeader').is(\":visible\")) {\n            // with scrolling listener not on the content anymore, disable scrolling listener until animation is done\n            $(window.parent.document).off('scroll')\n            $('.contentStickyBreadcrumbHeader').slideUp(500, function() {\n                handleContentScrolling();\n            });\n        }\n    }\n}\n\nfunction isMobileView() {\n    if ($(window).width() <= mobileWidth) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\nfunction isIPadView() {\n    if ($(window).width() <= ipadWidth && $(window).width() > mobileWidth) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n// function updateHashAfterRedirect() {\n//     var hashValue = window.location.hash;\n//     var href = \"\";\n//     if (hashValue !== \"\" && hashValue.indexOf(\"#rwlp_config_\") !== -1) {\n//         hashValue = hashValue.substring(\"#rwlp_config_\".length);\n//         //hashValue = hashValue.substring(1);\n//         if (hashValue.indexOf(\"&\") !== -1) {\n//             href = \"/docs/ref/config/\" + hashValue.substring(0, hashValue.indexOf(\"&\"));\n//         } else {\n//             href = \"/docs/ref/config/\" + hashValue;\n//         }\n    \n//         if (location.pathname + location.hash === href) {\n//             replaceHistoryState('#' + hashValue);\n//         }\n//     }\n// }\n\nfunction replaceHistoryState(hashToReplace) {\n    var fullHref = \"/docs/ref/config/\" + hashToReplace.substring(1);\n    var isExpand = undefined;\n    if (fullHref.indexOf(\"&\") !== -1) {\n        fullHref = fullHref.substring(0, fullHref.indexOf(\"&\"));\n        if (hashToReplace.indexOf(\"&expand=true\") !== -1) {\n            isExpand = true;\n        } else if (hashToReplace.indexOf(\"&expand=false\") !== -1) {\n            isExpand = false;\n        }\n    }\n    var state = { href: fullHref };\n    if (isExpand !== undefined) {\n        state.expand = isExpand;\n    }\n    window.history.replaceState(state, null, hashToReplace);\n    return fullHref;\n}\n\n// This function was written for the Server Configuration overview pages only.\n// When we have a page that has an anchor that references another section in the same page,\n// the browser scrolls that section, on the same page, into view.\n// When the scrolling occurs, the whole page was being scrolled \"under\" our top navigation bar.\n// rather than the whole page\nfunction addOverviewPageClickAndScroll() {\n    var article = $('article.doc');\n    var allHashAnchorsInOverviewPages = 'div[id=\"overview_content\"] a[href^=\"#\"]';\n    var overviewAnchors = article.find(allHashAnchorsInOverviewPages);\n    overviewAnchors.on(\"click\",function (event) {\n        event.preventDefault();\n        var hash = this.hash;\n        var target = article.find(hash);\n        var newTop = target.offset().top;\n        scrollToPos(newTop);\n    });\n}\n\n$(document).ready(function () {\n    addTOCClick();\n    addConfigContentFocusListener();\n    handleInitialContent();\n    handlePopstate();\n    addOverviewPageClickAndScroll();\n    initialContentBreadcrumbVisibility();\n    modifyFixedTableColumnWidth();\n    handleSubHeadingsInContent();\n    var TOCElement = findTOCElement();\n    handleSubHeadingsInTOC(TOCElement); // this adds the sub elements to li so check here for the hash usage\n    var TOCSubElement = findTOCElement(true);\n    if (TOCSubElement) {\n        setSelectedTOC(TOCSubElement, true);\n    } else if (TOCElement) {\n        setSelectedTOC(TOCElement, true);\n    }\n    createClickableBreadcrumb(getContentBreadcrumbTitle(), true);\n\n    if (!isMobileView() && !isIPadView()) {         \n        handleContentScrolling();\n    } \n\n    if (window.location.hash !== \"\" && window.location.hash !== undefined &&\n        window.location.hash.indexOf(\"&expand=\") !== -1) {\n        var isExpand;\n        if (window.location.hash.indexOf(\"&expand=true\") !== -1) {\n            isExpand = true;\n        } else if (window.location.hash.indexOf(\"&expand=false\") !== -1) {\n            isExpand = false;\n        }\n        var hash = window.location.hash.substring(1);\n        if (hash.indexOf(\"#\") !== -1) {\n            var titleId = hash.substring(hash.indexOf('#') + 1, hash.indexOf(\"&\"));\n            handleExpandCollapseState(titleId, isExpand);\n        }\n    }\n\n    // update hash if it is redirect\n    // updateHashAfterRedirect();\n});"]}